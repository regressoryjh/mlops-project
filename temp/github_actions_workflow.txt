name: MLOps Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Sunday at midnight
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  # Job 1: Data Collection
  scrape:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Clean data
        run: |
          python data_cleaner.py
      
      - name: Run sentiment analysis
        run: |
          python sentiment_analyzer.py
      
      - name: Run engagement analysis
        run: |
          python engagement_analyzer.py
      
      - name: Upload processed data
        uses: actions/upload-artifact@v3
        with:
          name: processed-data
          path: data/processed/*.csv

  # Job 3: Model Training
  train:
    runs-on: ubuntu-latest
    needs: process
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Download processed data
        uses: actions/download-artifact@v3
        with:
          name: processed-data
          path: data/processed/
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Train sentiment model
        run: |
          python models/train_model.py
      
      - name: Evaluate model
        run: |
          python models/evaluate_model.py
      
      - name: Upload model artifacts
        uses: actions/upload-artifact@v3
        with:
          name: model-artifacts
          path: |
            models/*.pkl
            models/*.json

  # Job 4: Model Testing
  test:
    runs-on: ubuntu-latest
    needs: train
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Download model artifacts
        uses: actions/download-artifact@v3
        with:
          name: model-artifacts
          path: models/
      
      - name: Run unit tests
        run: |
          pytest tests/ -v --cov=. --cov-report=xml
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests

  # Job 5: Build Docker Images
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build scraper image
        run: |
          docker build -f docker/Dockerfile.scraper -t indopopbase-scraper:latest .
      
      - name: Build processor image
        run: |
          docker build -f docker/Dockerfile.processor -t indopopbase-processor:latest .
      
      - name: Build ML service image
        run: |
          docker build -f docker/Dockerfile.ml -t indopopbase-ml:latest .
      
      - name: Build dashboard image
        run: |
          docker build -f docker/Dockerfile.dashboard -t indopopbase-dashboard:latest .
      
      - name: Test Docker Compose
        run: |
          docker-compose -f docker-compose.yml config

  # Job 6: Deploy (if on main branch)
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy notification
        run: |
          echo "ðŸš€ Deploying to production..."
          # Add your deployment steps here
          # e.g., deploy to cloud, update containers, etc.

  # Job 7: Monitor
  monitor:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Check model performance
        run: |
          python mlops/monitor_model.py
      
      - name: Check data drift
        run: |
          python mlops/drift_detection.py
      
      - name: Send metrics to monitoring
        run: |
          echo "ðŸ“Š Sending metrics to monitoring system..."
          # Add monitoring integration here
