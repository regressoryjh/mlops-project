version: '3.8'

services:
  # Database Service (PostgreSQL)
  database:
    image: postgres:15-alpine
    container_name: indopopbase_db
    environment:
      POSTGRES_DB: indopopbase
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - indopopbase_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Scraper Service
  scraper:
    build:
      context: .
      dockerfile: docker/Dockerfile.scraper
    container_name: indopopbase_scraper
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./scrapers:/app/scrapers
    environment:
      - DATABASE_URL=postgresql://admin:admin123@database:5432/indopopbase
      - LOG_LEVEL=INFO
    networks:
      - indopopbase_network
    restart: unless-stopped

  # Data Processing Service
  processor:
    build:
      context: .
      dockerfile: docker/Dockerfile.processor
    container_name: indopopbase_processor
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./preprocessing:/app/preprocessing
    environment:
      - DATABASE_URL=postgresql://admin:admin123@database:5432/indopopbase
      - LOG_LEVEL=INFO
    networks:
      - indopopbase_network
    restart: unless-stopped

  # ML Service (Sentiment Analysis)
  ml-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.ml
    container_name: indopopbase_ml
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ml_models:/app/ml_models
    environment:
      - DATABASE_URL=postgresql://admin:admin123@database:5432/indopopbase
      - MODEL_PATH=/app/ml_models
    ports:
      - "8000:8000"
    networks:
      - indopopbase_network
    restart: unless-stopped

  # Dashboard Service (Streamlit)
  dashboard:
    build:
      context: .
      dockerfile: docker/Dockerfile.dashboard
    container_name: indopopbase_dashboard
    depends_on:
      - database
      - ml-service
    volumes:
      - ./data:/app/data
      - ./dashboard.py:/app/dashboard.py
    environment:
      - DATABASE_URL=postgresql://admin:admin123@database:5432/indopopbase
      - ML_SERVICE_URL=http://ml-service:8000
    ports:
      - "8501:8501"
    networks:
      - indopopbase_network
    restart: unless-stopped

  # MLflow Service (Experiment Tracking)
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: indopopbase_mlflow
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlflow/mlruns
      - ./mlartifacts:/mlflow/mlartifacts
    environment:
      - BACKEND_STORE_URI=postgresql://admin:admin123@database:5432/indopopbase
      - ARTIFACT_ROOT=/mlflow/mlartifacts
    command: >
      mlflow server
      --backend-store-uri postgresql://admin:admin123@database:5432/indopopbase
      --default-artifact-root /mlflow/mlartifacts
      --host 0.0.0.0
      --port 5000
    networks:
      - indopopbase_network
    restart: unless-stopped

  # Nginx (Reverse Proxy - Optional)
  nginx:
    image: nginx:alpine
    container_name: indopopbase_nginx
    depends_on:
      - dashboard
      - mlflow
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - indopopbase_network
    restart: unless-stopped

networks:
  indopopbase_network:
    driver: bridge

volumes:
  postgres_data:
  ml_models:
